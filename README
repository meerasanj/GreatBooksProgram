Problem Description 
The Great Books Search Program should allow users to input and manage a library of books, display book records sorted alphabetically by title, and search for books by title.  
The "Great Books Search Program" offers three main menu choices: 1) Display All Book Records, 2) Search for a Book by Title, and 3) Exit Search Program. The user enters "1,,” “2,” or “3” depending on what they would like to do. Option #1 displays all book records sorted by title. Users can page through the records, returning to the menu when done. Option #2 prompts the user to enter a book title they want to find. After the user enters the title, the program performs a binary search to locate the book by title and displays its details. It divides the data set in half, compares the target title with the middle element, and repeats the process in the appropriate half until the title is found or determined not to exist. Prior to the binary search, the sortBooks method is called, which uses selection sort to sort the book records based on their titles in alphabetical order.  The user can continue searching for more titles, or they can press Enter to return to the main menu. Lastly, option #3 allows users to exit the program. 
To better explain how the sorting and searching algorithm works, let us consider an array of five integers: {4, 1, 3, 5, 2}. For the selection sort, the minimum value will be swapped with the first element to be {1, 4, 3, 5, 2}. After this, the minimum value in the remaining array will be swapped with the second element to be {1, 2, 3, 5 4}. This process will continue until the end of the array. For the sorted array of integers, the binary search will compare “3” with the middle element, which is equal. This means that the search is successful, so the index of "3,” which is 2, will be returned. 
Prrogram Specification 
The program is provided with two input files: library.dat and play.dat. When the user starts the program, an initial menu is displayed that asks the user to enter the name of the file containing book data (ex: library.dat). If the user enters “library.dat” or "play.dat,” the program reads the book data from the input file using a scanner, populates an ArrayList of book records, and informs the user of the number of books loaded. If the user enters something else, an error message is displayed. Then, the user is asked to hit return to continue, which will display the main menu. 
Program Algorithm 
Input & Inital Menu: The program starts with the initial menu. It then reads the user’s choice of which input file to read book records from and stores them into an ArrayList. When reading book data from the input file, the program sorts the book records by title in alphabetical order using a selection sort algorithm. The total # of books loaded is displayed, and the user is asked to hit return to continue, which will display the main menu. 
Main Menu: The program displays the main menu with three options: 1) Display all book records, 2) Search for a book by Title, or 3) Exit the program. The user can enter their choice of 1, 2, or 3. 
Option #1 of Main Menu: If the user selects this option, the program checks if the book list is empty. If the list is not empty, it displays all book records in alphabetical order. After displaying a page of records, the program waits for the user to press the return key to continue or "M" to return to the main menu. 
Option #2 of Main Menu: If the user selects this option, the program prompts the user to enter a title to search for. Then, a binary search will be done on the sorted book list to find the book with the given title. If the book is found, it displays the book record. After displaying the record, the program waits for the user to press the return key to return to the main menu.
Option #3 of Main Menu: If the user selects this option, the program displays a goodbye message and exits.
Other Important Methods: A clearScreen method will be used to clear the console between displaying the menu options. 

